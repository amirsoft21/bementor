{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import toast from'react-hot-toast';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is logged in on app start\nconst token=api.getToken();if(token){loadCurrentUser();}else{setLoading(false);}},[]);const loadCurrentUser=async()=>{try{const response=await api.getCurrentUser();setCurrentUser(response.user);}catch(error){console.error('Failed to load current user:',error);api.removeToken();}finally{setLoading(false);}};const login=async(email,password,role)=>{try{const response=await api.login({email,password,role});setCurrentUser(response.user);api.setToken(response.token);toast.success(response.message||'წარმატებით შეხვედით!');return true;}catch(error){console.error('Login error:',error);toast.error(error.message||'შესვლისას შეცდომა მოხდა');return false;}};const signup=async userData=>{try{const response=await api.register(userData);setCurrentUser(response.user);api.setToken(response.token);toast.success(response.message||'ანგარიში წარმატებით შეიქმნა!');return true;}catch(error){console.error('Signup error:',error);if(error.message.includes('already exists')){toast.error('მომხმარებელი ამ ელ-ფოსტით უკვე არსებობს');}else{toast.error(error.message||'რეგისტრაციისას შეცდომა მოხდა');}return false;}};const logout=()=>{setCurrentUser(null);api.removeToken();toast.success('წარმატებით გამოხვედით');};const value={currentUser,login,signup,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","token","getToken","loadCurrentUser","response","getCurrentUser","user","error","console","removeToken","login","email","password","role","setToken","success","message","signup","userData","register","includes","logout","value","Provider"],"sources":["C:/Users/admin/Desktop/testbementor/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = api.getToken();\r\n    if (token) {\r\n      loadCurrentUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const loadCurrentUser = async () => {\r\n    try {\r\n      const response = await api.getCurrentUser();\r\n      setCurrentUser(response.user);\r\n    } catch (error) {\r\n      console.error('Failed to load current user:', error);\r\n      api.removeToken();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      const response = await api.login({ email, password, role });\r\n      setCurrentUser(response.user);\r\n      api.setToken(response.token);\r\n      toast.success(response.message || 'წარმატებით შეხვედით!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error.message || 'შესვლისას შეცდომა მოხდა');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const response = await api.register(userData);\r\n      setCurrentUser(response.user);\r\n      api.setToken(response.token);\r\n      toast.success(response.message || 'ანგარიში წარმატებით შეიქმნა!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      if (error.message.includes('already exists')) {\r\n        toast.error('მომხმარებელი ამ ელ-ფოსტით უკვე არსებობს');\r\n      } else {\r\n        toast.error(error.message || 'რეგისტრაციისას შეცდომა მოხდა');\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    api.removeToken();\r\n    toast.success('წარმატებით გამოხვედით');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}