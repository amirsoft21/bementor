{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\testbementor\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = api.getToken();\n    if (token) {\n      loadCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const loadCurrentUser = async () => {\n    try {\n      const response = await api.getCurrentUser();\n      setCurrentUser(response.user);\n    } catch (error) {\n      console.error('Failed to load current user:', error);\n      api.removeToken();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password, role) => {\n    try {\n      const response = await api.login({\n        email,\n        password,\n        role\n      });\n      setCurrentUser(response.user);\n      api.setToken(response.token);\n      toast.success(response.message || 'წარმატებით შეხვედით!');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error(error.message || 'შესვლისას შეცდომა მოხდა');\n      return false;\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Mock API call - replace with actual backend\n      const newUser = {\n        id: Date.now(),\n        ...userData,\n        avatar: `https://images.unsplash.com/photo-${Math.floor(Math.random() * 1000000)}?w=150&h=150&fit=crop&crop=face`\n      };\n\n      // Mock JWT token\n      const token = btoa(JSON.stringify({\n        id: newUser.id,\n        email: newUser.email,\n        role: newUser.role,\n        name: newUser.name,\n        avatar: newUser.avatar,\n        exp: Date.now() + 24 * 60 * 60 * 1000 // 24 hours\n      }));\n      localStorage.setItem('token', token);\n      setCurrentUser({\n        id: newUser.id,\n        email: newUser.email,\n        role: newUser.role,\n        name: newUser.name,\n        avatar: newUser.avatar\n      });\n      toast.success('Account created successfully!');\n      return true;\n    } catch (error) {\n      toast.error(error.message || 'Signup failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","getToken","loadCurrentUser","response","getCurrentUser","user","error","console","removeToken","login","email","password","role","setToken","success","message","signup","userData","newUser","id","Date","now","avatar","Math","floor","random","btoa","JSON","stringify","name","exp","localStorage","setItem","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/testbementor/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const token = api.getToken();\r\n    if (token) {\r\n      loadCurrentUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const loadCurrentUser = async () => {\r\n    try {\r\n      const response = await api.getCurrentUser();\r\n      setCurrentUser(response.user);\r\n    } catch (error) {\r\n      console.error('Failed to load current user:', error);\r\n      api.removeToken();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      const response = await api.login({ email, password, role });\r\n      setCurrentUser(response.user);\r\n      api.setToken(response.token);\r\n      toast.success(response.message || 'წარმატებით შეხვედით!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error.message || 'შესვლისას შეცდომა მოხდა');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Mock API call - replace with actual backend\r\n      const newUser = {\r\n        id: Date.now(),\r\n        ...userData,\r\n        avatar: `https://images.unsplash.com/photo-${Math.floor(Math.random() * 1000000)}?w=150&h=150&fit=crop&crop=face`\r\n      };\r\n\r\n      // Mock JWT token\r\n      const token = btoa(JSON.stringify({\r\n        id: newUser.id,\r\n        email: newUser.email,\r\n        role: newUser.role,\r\n        name: newUser.name,\r\n        avatar: newUser.avatar,\r\n        exp: Date.now() + 24 * 60 * 60 * 1000 // 24 hours\r\n      }));\r\n\r\n      localStorage.setItem('token', token);\r\n      setCurrentUser({\r\n        id: newUser.id,\r\n        email: newUser.email,\r\n        role: newUser.role,\r\n        name: newUser.name,\r\n        avatar: newUser.avatar\r\n      });\r\n\r\n      toast.success('Account created successfully!');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error(error.message || 'Signup failed');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setCurrentUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}